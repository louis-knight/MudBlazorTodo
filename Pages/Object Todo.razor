@page "/"

<MudGrid>
    <MudItem xs="5">
        <MudPaper Class="ma-3 pa-3 d-flex flex-column" Elevation="4">
            <MudPaper Class="d-flex flex-row" >
                <MudTextField Class="ma-2" @bind-Value="textInput" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                <MudButton Color="Color.Success" Class="mx-4 my-1" StartIcon="@Icons.Material.Sharp.Add" OnClick="AddEntry">Add</MudButton>
            </MudPaper>
            <div>
                <MudList Clickable="true" @bind-SelectedItem="@selectedItem">
                    @foreach(todoTask item in taskList)
                    {
                    <div Class="d-flex flex-row">
                        <MudToggleIconButton @bind-Toggled="@item.IsComplete" Icon="@Icons.Outlined.CheckBoxOutlineBlank" ToggledIcon="@Icons.Outlined.CheckBox"/>
                        <MudListItem Text="@item.Title" Value="@item"/>
@*                        <MudSpacer />
                        <MudIconButton Icon="@Icons.Outlined.Delete" @OnClick="@(() => Delete(item))" ></MudIconButton>*@
                    </div>
                    }
                </MudList>
            </div>

        </MudPaper>
    </MudItem>
    <MudItem xs="7">
        <MudPaper Class="d-flex flex-column mud-width-full pa-3 ma-3" Elevation="4">
            <MudText Typo="Typo.h5">@selectedItem.Text</MudText>
            <MudTextField T="string" Lines="5" @bind-Value="@(((todoTask)selectedItem.Value).Note)" />
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    List<todoTask> taskList = new List<todoTask>();
    string? textInput;
    //todoTask selectedValue = new todoTask("");
    //string selectedValue = "";
    MudListItem selectedItem = new MudListItem{Text = "", Value = new todoTask("")};


    public class todoTask
    {
        public string Title { get; set; }
        public string? Note { get; set; }
        public bool IsComplete { get; set; }

        public todoTask(string title)
        {
            Title = title;
        }
    }  

    public void AddEntry()
    {
        if(textInput != null)
        {
            taskList.Add(new todoTask(textInput));
            taskList.Last().Note = "heelo" + taskList.Count;
        }
        textInput = null;
    }

    void Delete(todoTask item1)
    {
        taskList.Remove(item1);
    }
}